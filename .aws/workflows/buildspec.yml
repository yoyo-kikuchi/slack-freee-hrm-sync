version: 0.2

phases:
  install:
    runtime-versions:
      golang: latest

  pre_build:
    commands:
      # required
      - echo "${AWS_ACCOUNT_ID:?}"     >/dev/null || exit 1
      - echo "${AWS_DEFAULT_REGION:?}" >/dev/null || exit 1
      # GitHubのwebhookトリガーでしか動かない ※再試行では動かない
      - echo "${CODEBUILD_WEBHOOK_TRIGGER:?}"         >/dev/null || exit 1
      - echo "${CODEBUILD_RESOLVED_SOURCE_VERSION:?}" >/dev/null || exit 1
      - echo "${CODEBUILD_WEBHOOK_TRIGGER}"
      - echo "${CODEBUILD_RESOLVED_SOURCE_VERSION}"

  build:
    commands:
      # Docker Hub ダウンロード制限対応
      - echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USER} --password-stdin
      # ECR login
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      # script params
      - branch=$(echo ${CODEBUILD_WEBHOOK_TRIGGER} | cut -d / -f 2)
      - long_hash=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - image_tag=$(echo ${long_hash} | cut -c 1-8)
      - reg_name="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
      # docker build, tag, push
      - .aws/workflows/scripts/buildpack.sh ${branch} ${image_tag} ${reg_name}

  post_build:
    commands:
      - if [ ${CODEBUILD_BUILD_SUCCEEDING} -ne 1 ]; then printenv | sort; echo "build failed." >&2; fi
